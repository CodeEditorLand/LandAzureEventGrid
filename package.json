{
	"name": "vscode-azureeventgrid",
	"displayName": "Azure Event Grid (deprecated)",
	"version": "0.0.1",
	"private": false,
	"description": "%extension.description%",
	"homepage": "https://github.com/CodeEditorLand/Foundation#readme",
	"bugs": {
		"url": "https://github.com/CodeEditorLand/Foundation/issues"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/CodeEditorLand/Foundation.git"
	},
	"license": "SEE LICENSE IN LICENSE",
	"author": {
		"name": "Playform",
		"email": "Hello@Playform.Cloud",
		"url": "https://playform.cloud"
	},
	"type": "module",
	"main": "./out/src/extension",
	"scripts": {
		"build": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"package": "vsce package --githubBranch main",
		"prepublishOnly": "TypeScriptESBuild 'Source/**/*.ts'"
	},
	"contributes": {
		"commands": [
			{
				"category": "Azure Event Grid",
				"command": "azureEventGrid.selectSubscriptions",
				"icon": {
					"dark": "resources/dark/filter.svg",
					"light": "resources/light/filter.svg"
				},
				"title": "%selectSubscriptions%"
			},
			{
				"category": "Azure Event Grid Topic",
				"command": "azureEventGridTopic.refresh",
				"icon": {
					"dark": "resources/dark/refresh.svg",
					"light": "resources/light/refresh.svg"
				},
				"title": "%refresh%"
			},
			{
				"category": "Azure Event Grid Topic",
				"command": "azureEventGridTopic.loadMore",
				"title": "%loadMore%"
			},
			{
				"category": "Azure Event Grid Topic",
				"command": "azureEventGridTopic.openInPortal",
				"title": "%openInPortal%"
			},
			{
				"category": "Azure Event Grid Topic",
				"command": "azureEventGridTopic.createTopic",
				"icon": {
					"dark": "resources/dark/add.svg",
					"light": "resources/light/add.svg"
				},
				"title": "%createTopic%"
			},
			{
				"category": "Azure Event Grid Topic",
				"command": "azureEventGridTopic.deleteTopic",
				"title": "%delete%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.refresh",
				"icon": {
					"dark": "resources/dark/refresh.svg",
					"light": "resources/light/refresh.svg"
				},
				"title": "%refresh%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.loadMore",
				"title": "%loadMore%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.openInPortal",
				"title": "%openInPortal%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.createEventSubscription",
				"icon": {
					"dark": "resources/dark/add.svg",
					"light": "resources/light/add.svg"
				},
				"title": "%createEventSubscription%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.deleteEventSubscription",
				"title": "%delete%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.createMockEventGenerator",
				"icon": {
					"dark": "resources/dark/addTest.svg",
					"light": "resources/light/addTest.svg"
				},
				"title": "%createMockEventGenerator%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.sendEvents",
				"icon": {
					"dark": "resources/dark/sendEvents.svg",
					"light": "resources/light/sendEvents.svg"
				},
				"title": "%sendEvents%"
			},
			{
				"category": "Azure Event Grid Subscription",
				"command": "azureEventGridSubscription.previewEvents",
				"icon": {
					"dark": "resources/dark/previewEvents.svg",
					"light": "resources/light/previewEvents.svg"
				},
				"title": "%previewEvents%"
			}
		],
		"configuration": [
			{
				"properties": {},
				"title": "Azure Event Grid"
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "*.EventGenerator.json",
				"url": "./resources/eventGeneratorSchema.json"
			},
			{
				"fileMatch": "*.EventGenerator.jsonc",
				"url": "./resources/eventGeneratorSchema.json"
			},
			{
				"fileMatch": "*.eventGenerator.json",
				"url": "./resources/eventGeneratorSchema.json"
			},
			{
				"fileMatch": "*.eventGenerator.jsonc",
				"url": "./resources/eventGeneratorSchema.json"
			},
			{
				"fileMatch": "*.eventgenerator.json",
				"url": "./resources/eventGeneratorSchema.json"
			},
			{
				"fileMatch": "*.eventgenerator.jsonc",
				"url": "./resources/eventGeneratorSchema.json"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "azureEventGrid.selectSubscriptions",
					"when": "never"
				},
				{
					"command": "azureEventGridTopic.refresh",
					"when": "never"
				},
				{
					"command": "azureEventGridTopic.loadMore",
					"when": "never"
				},
				{
					"command": "azureEventGridSubscription.refresh",
					"when": "never"
				},
				{
					"command": "azureEventGridSubscription.loadMore",
					"when": "never"
				},
				{
					"command": "azureEventGridSubscription.sendEvents",
					"when": "never"
				},
				{
					"command": "azureEventGridSubscription.previewEvents",
					"when": "never"
				}
			],
			"editor/context": [
				{
					"command": "azureEventGridSubscription.sendEvents",
					"when": "resourceFilename=~ /.*\\.eventGenerator\\.jsonc?/i"
				},
				{
					"command": "azureEventGridSubscription.previewEvents",
					"when": "resourceFilename=~ /.*\\.eventGenerator\\.jsonc?/i"
				}
			],
			"editor/title": [
				{
					"command": "azureEventGridSubscription.sendEvents",
					"group": "navigation",
					"when": "resourceFilename=~ /.*\\.eventGenerator\\.jsonc?/i"
				},
				{
					"command": "azureEventGridSubscription.previewEvents",
					"group": "navigation",
					"when": "resourceFilename=~ /.*\\.eventGenerator\\.jsonc?/i"
				}
			],
			"view/item/context": [
				{
					"command": "azureEventGrid.selectSubscriptions",
					"group": "inline",
					"when": "view == azureEventGridTopicExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridTopic.createTopic",
					"group": "1@1",
					"when": "view == azureEventGridTopicExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridTopic.openInPortal",
					"group": "2@1",
					"when": "view == azureEventGridTopicExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridTopic.refresh",
					"group": "3@1",
					"when": "view == azureEventGridTopicExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridTopic.openInPortal",
					"group": "1@1",
					"when": "view == azureEventGridTopicExplorer && viewItem == azureEventGridTopic"
				},
				{
					"command": "azureEventGridTopic.deleteTopic",
					"group": "2@1",
					"when": "view == azureEventGridTopicExplorer && viewItem == azureEventGridTopic"
				},
				{
					"command": "azureEventGrid.selectSubscriptions",
					"group": "inline",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridSubscription.createEventSubscription",
					"group": "1@1",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridSubscription.openInPortal",
					"group": "2@1",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridSubscription.refresh",
					"group": "3@1",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureextensionui.azureSubscription"
				},
				{
					"command": "azureEventGridSubscription.openInPortal",
					"group": "1@1",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureEventGridSubscription"
				},
				{
					"command": "azureEventGridSubscription.createMockEventGenerator",
					"group": "2@1",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureEventGridSubscription"
				},
				{
					"command": "azureEventGridSubscription.deleteEventSubscription",
					"group": "3@1",
					"when": "view == azureEventGridSubscriptionExplorer && viewItem == azureEventGridSubscription"
				}
			],
			"view/title": [
				{
					"command": "azureEventGridTopic.createTopic",
					"group": "navigation@1",
					"when": "view == azureEventGridTopicExplorer"
				},
				{
					"command": "azureEventGridTopic.refresh",
					"group": "navigation@2",
					"when": "view == azureEventGridTopicExplorer"
				},
				{
					"command": "azureEventGridSubscription.createEventSubscription",
					"group": "navigation@1",
					"when": "view == azureEventGridSubscriptionExplorer"
				},
				{
					"command": "azureEventGridSubscription.createMockEventGenerator",
					"group": "navigation@2",
					"when": "view == azureEventGridSubscriptionExplorer"
				},
				{
					"command": "azureEventGridSubscription.refresh",
					"group": "navigation@3",
					"when": "view == azureEventGridSubscriptionExplorer"
				}
			]
		},
		"views": {
			"azure": [
				{
					"id": "azureEventGridTopicExplorer",
					"name": "Event Grid Topics"
				},
				{
					"id": "azureEventGridSubscriptionExplorer",
					"name": "Event Grid Subscriptions"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "resources/azure.svg",
					"id": "azure",
					"title": "Azure"
				}
			]
		}
	},
	"activationEvents": [
		"onCommand:azureEventGrid.selectSubscriptions",
		"onCommand:azureEventGridTopic.refresh",
		"onCommand:azureEventGridTopic.loadMore",
		"onCommand:azureEventGridTopic.openInPortal",
		"onCommand:azureEventGridTopic.createTopic",
		"onCommand:azureEventGridTopic.deleteTopic",
		"onCommand:azureEventGridSubscription.refresh",
		"onCommand:azureEventGridSubscription.loadMore",
		"onCommand:azureEventGridSubscription.openInPortal",
		"onCommand:azureEventGridSubscription.createEventSubscription",
		"onCommand:azureEventGridSubscription.deleteEventSubscription",
		"onCommand:azureEventGridSubscription.createMockEventGenerator",
		"onCommand:azureEventGridSubscription.sendEvents",
		"onCommand:azureEventGridSubscription.previewEvents",
		"onView:azureEventGridTopicExplorer",
		"onView:azureEventGridSubscriptionExplorer",
		"workspaceContains:**/*.[eE][vV][eE][nN][tT][gG][eE][nN][eE][rR][aA][tT][oO][rR].[jJ][sS][oO]{[nN],[nN][cC]}"
	],
	"dependencies": {
		"azure-arm-containerregistry": "2.2.0",
		"azure-arm-eventgrid": "1.4.0",
		"azure-arm-eventhub": "1.3.0",
		"azure-arm-iothub": "2.0.1",
		"azure-arm-resource": "4.1.0-preview",
		"chance": "1.1.11",
		"fs-extra": "11.2.0",
		"json-schema-faker": "0.5.6",
		"request-promise": "4.2.2",
		"vscode-azureextensionui": "0.20.0",
		"vscode-nls": "5.2.0"
	},
	"devDependencies": {
		"@types/chance": "1.1.6",
		"@types/fs-extra": "11.0.4",
		"@types/gulp": "4.0.17",
		"@types/mocha": "10.0.6",
		"@types/node": "20.11.30",
		"@types/request-promise": "4.1.51",
		"gulp": "4.0.2",
		"mocha": "10.3.0",
		"mocha-junit-reporter": "2.2.1",
		"ts-node": "10.9.2",
		"tslint-microsoft-contrib": "5.0.1",
		"typescript": "5.4.2",
		"typescript-esbuild": "0.4.5",
		"vsce": "1.81.1",
		"vscode": "1.1.36",
		"vscode-azureextensiondev": "0.10.4"
	},
	"extensionDependencies": [
		"ms-vscode.azure-account"
	],
	"publishConfig": {
		"access": "public"
	},
	"icon": "resources/azureEventGrid.png",
	"galleryBanner": {
		"color": "#002050",
		"theme": "dark"
	},
	"preview": true,
	"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217"
}
